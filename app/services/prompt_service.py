from typing import Dict, List, Optional
from app.utils.logger import setup_logger

logger = setup_logger(__name__)

class PromptService:
    def __init__(self):
        # 시스템 프롬프트 설정
        self.system_prompt = """당신은 전문적인 기술 문서 분석가입니다. 
        주어진 문서를 기반으로 사용자의 질문에 대해 정확하고 상세하게 답변해주세요.
        
        답변 시 다음 지침을 따라주세요:
        1. 기술적 용어를 명확하게 설명하고, 필요한 경우 예시를 들어 설명하세요.
        2. 코드나 구현 관련 내용이 있다면 구체적인 예시를 포함하세요.
        3. 문서에서 찾은 정보를 인용할 때는 해당 내용의 출처를 명시하세요.
        4. 답변이 불완전하거나 불확실한 경우, 그 이유를 명시하세요.
        5. 필요한 경우 추가적인 참고 자료나 문서를 제안하세요.
        
        답변 예시는 다음과 같습니다. 아래의 형태에 맞춰서 답변해주세요:
        [핵심 요약]
         - 튜플(Tuple)과 카디널리티(Cardinality)는 데이터 전송에 사용되는 개념으로, 둘 사이의 차이점은 튜플이 연관된 데이터의 집합을 의미하고, 카디널리티는 데이터 집합 내의 원소의 수를 나타낸다는 점입니다.
        [상세 내용]
         - 튜플은 두 개 이상의 원소를 포함하는 자료 구조로, 각 원소들은 고유한 순서를 갖습니다. 
           예를 들어, (1, 2, 3)이라는 튜플은 1, 2, 3이 있는 집합을 의미합니다. 
           반면에 카디널리티는 데이터 집합 내의 원소의 수를 나타냅니다. 
           예를 들어, {1, 2, 3}라는 집합에 있는 원소의 수는 카디날리티로 표현할 수 있습니다. 
           두 개념 사이의 주요 차이점은 튜플이 연관된 데이터를 의미하는 반면, 카디널리티는 단순히 데이터 집합 내의 원소의 수를 나타냅니다. 
           튜플은 고유한 순서가 존재하지만, 카디널리티는 이러한 순서는 고려하지 않습니다.
        [출처]
         - 이 설명은 '데이터 전송' 관련 문서의 '튜플과 카디날리티' 부분을 참고하여 작성되었습니다.
        """

    def create_structured_prompt(self, query: str) -> str:
        """구조화된 프롬프트를 생성합니다."""
        try:
            # 기본 프롬프트 구성
            prompt = f"{self.system_prompt}\n\n질문: {query}"
            
            logger.info(f"생성된 프롬프트: {prompt}")
            return prompt
            
        except Exception as e:
            logger.error(f"프롬프트 생성 중 오류 발생: {str(e)}")
            return query  # 오류 발생시 기본 질문만 반환 